{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstats.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/RegisterProductScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","createProduct","post","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","RegisterProductScreen","setPrice","setImage","brand","setBrand","category","setCategory","setCountInStock","setDescription","uploading","errorCreate","loadingCreate","successCreate","File","label","custom","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","vairant","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","bordered","hover","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","createdProduct","deleteProduct","ProductEditScreen","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","App","path","component","exact","UserListScree","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.30d6c313.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems:[]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,  \r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstats'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstats'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password }\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            {\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand href=\"/\">Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link href=\"/login\"><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                \r\n\r\n                            </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; ProShop </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            \r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span> {text && text} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant = {variant}>\r\n            {children}            \r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>\r\n                        {x + 1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n    :error\r\n    ?<Message variant='danger'>{error}</Message>\r\n    :(\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (${product.price}) </h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    /*  const product = products.find((p) => p._id == match.params.id) */\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'> Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825 '} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price : ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Strock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1' >\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn btn-block'\r\n                                                    disabled={product.countInStock === 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                            </Button>\r\n                                            </ListGroup.Item>\r\n\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader/>}\r\n                                            {successProductReview && <Message variant='success'>Review Submited</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    <Form.Group controlId='comment'></Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shooping Card</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your carti is empty <Link to='/'>Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Procced to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6} >\r\n                    {children}\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign in</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction RegisterProductScreen({ match, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { error: errorCreate, loading: loadingCreate, success: successCreate } = productCreate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successCreate) {\r\n            dispatch({ type: PRODUCT_CREATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } \r\n\r\n    }, [dispatch, history, successCreate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {loadingCreate && <Loader />}\r\n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image_file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>Create</Button>\r\n                        </Form>\r\n\r\n\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterProductScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={4}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={8}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message vairant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstats'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstats'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n        useEffect(() => {\r\n            if (success) {\r\n                history.push(`/order/${order._id}`)\r\n                dispatch({type: ORDER_CREATE_RESET})\r\n            }\r\n        }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Sumary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstats'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:  </strong>  {order.user.name}</p>\r\n                            <p><strong>Email:  </strong> <a href={`mailto: ${order.user.email}`}> {order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Sumary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark is deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? <Loader />\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? <Loader />\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='password'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>Update</Button>\r\n                        </Form>\r\n\r\n\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const redirectForCreateProductHandler = () => {\r\n        history.push('/admin/product/create')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n\r\n                    <Button className='my-3' onClick={redirectForCreateProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? <Loader />\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image_file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>Update</Button>\r\n                        </Form>\r\n\r\n\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport RegisterProductScreen from './screens/RegisterProductScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScree from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScree} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/create' component={RegisterProductScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}